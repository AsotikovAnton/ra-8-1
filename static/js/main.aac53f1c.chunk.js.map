{"version":3,"sources":["components/List.js","components/Details.js","App.js","index.js"],"names":["List","props","data","map","item","key","id","onClick","onClickItem","className","active","name","Details","alt","src","avatar","details","city","company","position","App","url","process","useState","list","setList","setDetails","state","itemUrl","currentFetch","setCurrentFetch","isLoading","setLoading","useEffect","a","fetch","response","ok","Error","statusText","json","console","log","fetchData","prevList","activeItem","ReactDOM","render","document","getElementById"],"mappings":"2MAEe,SAASA,EAAKC,GAAQ,IAC3BC,EAASD,EAATC,KAKR,OACE,4BACGA,EAAKC,KAAI,SAACC,GAAD,OAAU,wBAAIC,IAAKD,EAAKE,GAAIC,QAAS,kBAN9BD,EAMgDF,EAAKE,QALxEL,EAAMO,YAAYF,GADA,IAACA,GAM0DG,UAAWL,EAAKM,OAAS,SAAW,IAC5GN,EAAKO,UCTC,SAASC,EAAQX,GAAQ,IAC9BC,EAASD,EAATC,KACR,OACE,yBAAKI,GAAIJ,EAAKI,GAAIG,UAAU,WAC1B,yBAAKI,IAAKX,EAAKS,KAAMG,IAAKZ,EAAKa,SAC/B,uBAAGN,UAAU,QAAQP,EAAKS,MAC1B,oCAAUT,EAAKc,QAAQC,MACvB,uCAAaf,EAAKc,QAAQE,SAC1B,wCAAchB,EAAKc,QAAQG,WCuDlBC,MA5Df,WACE,IAAMC,EAAMC,uGADC,EAEWC,mBAAS,IAFpB,mBAENC,EAFM,KAEAC,EAFA,OAGiBF,mBAAS,IAH1B,mBAGNP,EAHM,KAGGU,EAHH,OAI2BH,mBAAS,CAC/CI,MAAOF,EACPG,QAAQ,GAAD,OAAKP,EAAL,gBANI,mBAINQ,EAJM,KAIQC,EAJR,OAQmBP,oBAAS,GAR5B,mBAQNQ,EARM,KAQKC,EARL,KAmDb,OAzCAC,qBAAU,YACO,uCAAG,8BAAAC,EAAA,6DAChBF,GAAW,GADK,kBAGSG,MAAMN,EAAaD,SAH5B,WAGRQ,EAHQ,QAIAC,GAJA,sBAKN,IAAIC,MAAMF,EAASG,YALb,uBAOKH,EAASI,OAPd,OAORtC,EAPQ,OAQd2B,EAAaF,MAAMzB,GARL,kDAUduC,QAAQC,IAAR,MAVc,yBAYdV,GAAW,GAZG,6EAAH,qDAgBfW,KACC,CAACd,IAwBF,oCACGE,GAAa,uBAAGtB,UAAU,WAAb,cACd,kBAACT,EAAD,CAAME,KAAMsB,EAAMhB,YAxBF,SAACF,GAChBA,IAAOU,EAAQV,KAChBmB,GAAQ,SAAAmB,GAAQ,OAAIA,EAASzC,KAAI,SAACC,GAChC,IAAIyC,GAAa,EAIjB,OAHIzC,EAAKE,KAAOA,IACduC,GAAa,GAER,CACLvC,GAAIF,EAAKE,GACTK,KAAMP,EAAKO,KACXD,OAAQmC,SAIZf,EAAgB,CACdH,MAAOD,EACPE,QAAQ,GAAD,OAAKP,GAAL,OAAWf,EAAX,eASRU,EAAQV,IAAM,kBAACM,EAAD,CAASV,KAAMc,MCxDpC8B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.aac53f1c.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function List(props) {\n  const { data } = props;\n  const handleClick = (id) => {\n    props.onClickItem(id);\n  };\n\n  return (\n    <ul>\n      {data.map((item) => <li key={item.id} onClick={() => handleClick(item.id)} className={item.active ? 'active' : ''}>\n        {item.name}\n      </li>)}\n    </ul>\n  );\n}\n","import React from 'react';\n\nexport default function Details(props) {\n  const { data } = props;\n  return (\n    <div id={data.id} className=\"details\">\n      <img alt={data.name} src={data.avatar} />\n      <p className=\"name\">{data.name}</p>\n      <p>City: {data.details.city}</p>\n      <p>Company: {data.details.company}</p>\n      <p>Position: {data.details.position}</p>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport List from './components/List';\nimport Details from './components/Details';\n\nfunction App() {\n  const url = process.env.REACT_APP_URL;\n  const [list, setList] = useState([]);\n  const [details, setDetails] = useState({});\n  const [currentFetch, setCurrentFetch] = useState({\n    state: setList,\n    itemUrl: `${url}users.json`,\n  });\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(currentFetch.itemUrl);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        const data = await response.json();\n        currentFetch.state(data);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setLoading(false);\n      }\n\n    };\n    fetchData();\n  }, [currentFetch]);\n\n  const handleClick = (id) => {\n    if(id !== details.id) {\n      setList(prevList => prevList.map((item) => {\n        let activeItem = false;\n        if (item.id === id) {\n          activeItem = true;\n        }\n        return {\n          id: item.id,\n          name: item.name,\n          active: activeItem,\n        };\n      }))\n\n      setCurrentFetch({\n        state: setDetails,\n        itemUrl: `${url}${id}.json`,\n      });\n    }\n  }\n\n  return (\n    <>\n      {isLoading && <p className=\"loading\">Loading...</p>}\n      <List data={list} onClickItem={handleClick} />\n      {details.id && <Details data={details} />}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}